// Code generated by protoc-gen-go. DO NOT EDIT.
// source: loop3.proto

package loop3_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Test struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TxRequests           int32    `protobuf:"varint,2,opt,name=txRequests,proto3" json:"txRequests,omitempty"`
	TxPacing             int32    `protobuf:"varint,3,opt,name=txPacing,proto3" json:"txPacing,omitempty"`
	TxMaxJitter          int32    `protobuf:"varint,4,opt,name=txMaxJitter,proto3" json:"txMaxJitter,omitempty"`
	RxRequests           int32    `protobuf:"varint,5,opt,name=rxRequests,proto3" json:"rxRequests,omitempty"`
	RxTimeout            int32    `protobuf:"varint,6,opt,name=rxTimeout,proto3" json:"rxTimeout,omitempty"`
	PayloadMinBytes      int32    `protobuf:"varint,7,opt,name=payloadMinBytes,proto3" json:"payloadMinBytes,omitempty"`
	PayloadMaxBytes      int32    `protobuf:"varint,8,opt,name=payloadMaxBytes,proto3" json:"payloadMaxBytes,omitempty"`
	LatencyFrequency     int32    `protobuf:"varint,9,opt,name=latencyFrequency,proto3" json:"latencyFrequency,omitempty"`
	TxBlockType          string   `protobuf:"bytes,10,opt,name=txBlockType,proto3" json:"txBlockType,omitempty"`
	RxBlockType          string   `protobuf:"bytes,11,opt,name=rxBlockType,proto3" json:"rxBlockType,omitempty"`
	RxSeqBlockSize       int32    `protobuf:"varint,12,opt,name=rxSeqBlockSize,proto3" json:"rxSeqBlockSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}
func (*Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb557b01f1ee4776, []int{0}
}

func (m *Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test.Unmarshal(m, b)
}
func (m *Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test.Marshal(b, m, deterministic)
}
func (m *Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test.Merge(m, src)
}
func (m *Test) XXX_Size() int {
	return xxx_messageInfo_Test.Size(m)
}
func (m *Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Test proto.InternalMessageInfo

func (m *Test) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Test) GetTxRequests() int32 {
	if m != nil {
		return m.TxRequests
	}
	return 0
}

func (m *Test) GetTxPacing() int32 {
	if m != nil {
		return m.TxPacing
	}
	return 0
}

func (m *Test) GetTxMaxJitter() int32 {
	if m != nil {
		return m.TxMaxJitter
	}
	return 0
}

func (m *Test) GetRxRequests() int32 {
	if m != nil {
		return m.RxRequests
	}
	return 0
}

func (m *Test) GetRxTimeout() int32 {
	if m != nil {
		return m.RxTimeout
	}
	return 0
}

func (m *Test) GetPayloadMinBytes() int32 {
	if m != nil {
		return m.PayloadMinBytes
	}
	return 0
}

func (m *Test) GetPayloadMaxBytes() int32 {
	if m != nil {
		return m.PayloadMaxBytes
	}
	return 0
}

func (m *Test) GetLatencyFrequency() int32 {
	if m != nil {
		return m.LatencyFrequency
	}
	return 0
}

func (m *Test) GetTxBlockType() string {
	if m != nil {
		return m.TxBlockType
	}
	return ""
}

func (m *Test) GetRxBlockType() string {
	if m != nil {
		return m.RxBlockType
	}
	return ""
}

func (m *Test) GetRxSeqBlockSize() int32 {
	if m != nil {
		return m.RxSeqBlockSize
	}
	return 0
}

func init() {
	proto.RegisterType((*Test)(nil), "loop3.pb.Test")
}

func init() {
	proto.RegisterFile("loop3.proto", fileDescriptor_fb557b01f1ee4776)
}

var fileDescriptor_fb557b01f1ee4776 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x91, 0xc1, 0x4a, 0xf3, 0x40,
	0x10, 0xc7, 0xe9, 0xd7, 0xb4, 0x5f, 0x32, 0x11, 0x95, 0x39, 0x2d, 0x22, 0x52, 0x3c, 0x48, 0xf1,
	0xe0, 0xa5, 0x6f, 0xd0, 0x83, 0x07, 0xa1, 0x20, 0x69, 0x5e, 0x60, 0x1b, 0x07, 0x59, 0x4c, 0xb3,
	0xe9, 0x66, 0x0a, 0x1b, 0x1f, 0xc7, 0x27, 0x35, 0x99, 0x14, 0xb3, 0xd6, 0xdb, 0xcc, 0xef, 0xff,
	0xe3, 0x9f, 0xec, 0x2e, 0xa4, 0xa5, 0xb5, 0xf5, 0xea, 0xa9, 0x76, 0x96, 0x2d, 0xc6, 0xa7, 0x65,
	0x77, 0xff, 0x35, 0x85, 0x28, 0xa7, 0x86, 0x11, 0x21, 0xaa, 0xf4, 0x9e, 0xd4, 0x64, 0x31, 0x59,
	0x26, 0x99, 0xcc, 0x78, 0x07, 0xc0, 0x3e, 0xa3, 0xc3, 0xb1, 0x13, 0x1a, 0xf5, 0xaf, 0x4b, 0x66,
	0x59, 0x40, 0xf0, 0x06, 0x62, 0xf6, 0xaf, 0xba, 0x30, 0xd5, 0xbb, 0x9a, 0x4a, 0xfa, 0xb3, 0xe3,
	0x02, 0x52, 0xf6, 0x1b, 0xed, 0x5f, 0x0c, 0x33, 0x39, 0x15, 0x49, 0x1c, 0xa2, 0xbe, 0xdd, 0x8d,
	0xed, 0xb3, 0xa1, 0x7d, 0x24, 0x78, 0x0b, 0x89, 0xf3, 0xb9, 0xd9, 0x93, 0x3d, 0xb2, 0x9a, 0x4b,
	0x3c, 0x02, 0x5c, 0xc2, 0x55, 0xad, 0xdb, 0xd2, 0xea, 0xb7, 0x8d, 0xa9, 0xd6, 0x2d, 0x53, 0xa3,
	0xfe, 0x8b, 0x73, 0x8e, 0x43, 0x53, 0xfb, 0xc1, 0x8c, 0x7f, 0x9b, 0x27, 0x8c, 0x8f, 0x70, 0x5d,
	0x6a, 0xa6, 0xaa, 0x68, 0x9f, 0x5d, 0xff, 0x17, 0xdd, 0xa0, 0x12, 0x51, 0xff, 0xf0, 0xe1, 0x7c,
	0xeb, 0xd2, 0x16, 0x1f, 0x79, 0x5b, 0x93, 0x02, 0xb9, 0xb6, 0x10, 0xf5, 0x86, 0x0b, 0x8c, 0x74,
	0x30, 0x02, 0x84, 0x0f, 0x70, 0xe9, 0xfc, 0x96, 0x0e, 0x42, 0xb6, 0xe6, 0x93, 0xd4, 0x85, 0x7c,
	0xed, 0x8c, 0xee, 0xe6, 0xf2, 0x6a, 0xab, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x01, 0xaf,
	0xf2, 0xc4, 0x01, 0x00, 0x00,
}
